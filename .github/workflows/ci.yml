name: CI

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
  pull_request:

jobs:

  unit-tests:
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        jdk-version: [ 11, 17 ]
        kotlin-version: [ 1.9.22 ]
        runner: [ ubuntu-latest, windows-latest, macos-latest, macos-14 ]
    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.jdk-version }}
          check-latest: true

      - name: Gradle build action
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: true
          arguments: test -Doverride_kotlin=${{ matrix.kotlin-version }}

      - name: Upload Test Results
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        if: ${{ failure() }}
        with:
          name: test-results-${{ runner.name }}-${{ matrix.jdk-version }}-${{ matrix.kotlin-version }}
          path: '**/build/**/kase/**'
#          path: '**/build/**/TEST-*.xml'

      - name: Unit test results
        uses: mikepenz/action-junit-report@5f47764eec0e1c1f19f40c8e60a5ba47e47015c5 # v4
        if: failure() || success()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/**/TEST-*.xml'
          check_name: Unit Test Results - ${{ runner.name }} - ${{ matrix.jdk-version }} - ${{ matrix.kotlin-version }}

  all-checks:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - unit-tests

    steps:
      - name: require that all other jobs have passed
        uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: publish-snapshot
          jobs: ${{ toJSON(needs) }}
